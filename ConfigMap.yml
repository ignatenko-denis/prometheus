---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-sample-service
  namespace: my-space
data:
  prometheus.yml: |
    # my global config
    global:
      external_labels:
        monitor: prometheus
        replica: sample-local-prometheus
      scrape_interval:     20s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
      evaluation_interval: 10s # Evaluate rules every 15 seconds. The default is every 1 minute.
      scrape_timeout:      10s      # is set to the global default (10s).
    # Alertmanager configuration
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - "localhost:9093"
        # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
    rule_files:
    # - "first_rules.yml"
    # - "second_rules.yml"

    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'prometheus'
        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.
        static_configs:
        - targets: ['localhost:9090']

      - job_name: 'service-pods-metrics'
        honor_labels: true
        honor_timestamps: true
        params:
          match[]:
          - '{namespace="my-space"}'
        metrics_path: /federate
        scheme: https
        static_configs:
        - targets:
          - federate.openshift-monitoring.svc.cluster.local:9090
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          insecure_skip_verify: false
        metric_relabel_configs:
        - action: labeldrop
          regex: prometheus_replica
        - action: labeldrop
          regex: prometheus

      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'first-service'
        honor_labels: true
        honor_timestamps: true
        params:
          match[]:
          - '{namespace="my-space"}'
        metrics_path: '/first-service/actuator/prometheus'
        relabel_configs:
          - source_labels: [__address__]
            regex: ([^:]+):\d+
            target_label: node
        # scheme defaults to 'http'.
        static_configs:
        - targets: ['first-service.apps.my-sample-host.com']
          labels:
            service: 'first-service'

      - job_name: 'second-service'
        honor_labels: true
        honor_timestamps: true
        params:
          match[]:
          - '{namespace="my-space"}'
        metrics_path: '/second-service/actuator/prometheus'
        relabel_configs:
          - source_labels: [__address__]
            regex: ([^:]+):\d+
            target_label: node
        static_configs:
        - targets: ['second-service.apps.my-sample-host.com']
          labels:
            service: 'second-service'

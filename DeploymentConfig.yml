---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: prometheus-sample-service
  namespace: my-space
spec:
  selector:
    app: prometheus-sample-service
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus-sample-service
    spec:
      restartPolicy: Always
      serviceAccountName: prometheus
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            requests:
              cpu: 200m
              memory: 600Mi
            limits:
              cpu: 200m
              memory: 600Mi
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: prometheus-sample-service
          ports:
            - containerPort: 9090
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: prometheus-data-volume
              mountPath: /prometheus/data
            - name: prometheus-config-volume
              mountPath: /etc/prometheus
          terminationMessagePolicy: File
          image: >-
            registry.redhat.com/registry_redhat_io/openshift4/ose-prometheus:v4.7.0
          args:
            - '--storage.tsdb.retention.time=3d'
            - '--storage.tsdb.min-block-duration=2h'
            - '--storage.tsdb.max-block-duration=2h'
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--web.listen-address=0.0.0.0:9090'
            - '--storage.tsdb.path=/prometheus/data'
      serviceAccount: prometheus
      volumes:
        - name: prometheus-data-volume
          emptyDir: {}
        - name: prometheus-config-volume
          configMap:
            name: prometheus-sample-service
            defaultMode: 420
      dnsPolicy: ClusterFirst
